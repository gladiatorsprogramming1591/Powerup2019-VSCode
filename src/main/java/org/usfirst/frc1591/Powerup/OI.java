// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1591.Powerup;

import org.usfirst.frc1591.Powerup.commands.*;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.*;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);

    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.

    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:

    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());

    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());

    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public JoystickButton driveautoFWD;
    public Joystick driveStick;
    public JoystickButton clawOpenButton;
    public JoystickButton clawCloseButton;
    public JoystickButton clawStopButton;
    public JoystickButton resetButton;
    public Joystick elevatorStick;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public OI() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

    	
    	//elevator stick
        elevatorStick = new Joystick(1);
        
        /**
        X: Lift/Climb
        A: Bypass upper limit switch
        Left joystick: control elevator
        **/
        
        //resetButton = new JoystickButton(elevatorStick, 1);
        //resetButton.whileHeld(new resetRobot());
        //clawStopButton = new JoystickButton(elevatorStick, 8);
        //clawStopButton.whenPressed(new clawStop());
        clawCloseButton = new JoystickButton(elevatorStick, 6);
        clawCloseButton.whileHeld(new clawClose());
        clawOpenButton = new JoystickButton(elevatorStick, 5);
        clawOpenButton.whenPressed(new clawOpen());
       
        //drive stick
        driveStick = new Joystick(0);
        
        /**
        Y: enable ramp drive
        B: enable lowgear drive
        left joystick: Drive
        **/
        
        //driveautoFWD = new JoystickButton(driveStick, 5);
        //driveautoFWD.whenPressed(new driveFWD(0, 0));


        // SmartDashboard Buttons
//        SmartDashboard.putData("driveManual", new driveManual());
//        SmartDashboard.putData("setRampSpeed: rampSpeed1", new setRampSpeed(1));
//        SmartDashboard.putData("setRampSpeed: rampSpeed2", new setRampSpeed(2));
//        SmartDashboard.putData("setRampSpeed: rampSpeed0_5", new setRampSpeed(0.5));
//        SmartDashboard.putData("setRampSpeed: rampSpeed0_75", new setRampSpeed(.75));
//        SmartDashboard.putData("clawOpen", new clawOpen());
//        SmartDashboard.putData("clawClose", new clawClose());
//        SmartDashboard.putData("clawStop", new clawStop());
//        SmartDashboard.putData("elevatorManual", new elevatorManual());
//        SmartDashboard.putData("driveRotate: One", new driveRotate(0.5, 1.0));
//        SmartDashboard.putData("driveRotate: Two", new driveRotate(0.5, 2.0));
//        SmartDashboard.putData("driveRotate: Three", new driveRotate(0.5, 3.0));
//        SmartDashboard.putData("driveRotate: Four", new driveRotate(-0.5, 1.0));
//        SmartDashboard.putData("driveRotate: Five", new driveRotate(-0.5, 2.0));
//        SmartDashboard.putData("driveRotate: Six", new driveRotate(-0.5, 3.0));
//        SmartDashboard.putData("driveRotate: Seven", new driveRotate(0.75, 1.0));
//        SmartDashboard.putData("driveRotate: Eight", new driveRotate(1.0, 1.0));
//        SmartDashboard.putData("driveFWD: One", new driveFWD(0.5, 1.0));
//        SmartDashboard.putData("driveFWD: Two", new driveFWD(0.5, 2.0));
//        SmartDashboard.putData("driveFWD: Three", new driveFWD(0.5, 3.0));
//        SmartDashboard.putData("driveFWD: Four", new driveFWD(.75, 1.0));
//        SmartDashboard.putData("driveFWD: Five", new driveFWD(1.0, 1.0));
//        SmartDashboard.putData("Autonomous Command", new AutonomousCommand());
//        SmartDashboard.putData("driveAutonomous: default", new driveAutonomous(0, 0, 0));
//        SmartDashboard.putData("autoLeft", new autoLeft());
//        SmartDashboard.putData("autoCenter", new autoCenter());
//        SmartDashboard.putData("autoRight", new autoRight());
//        SmartDashboard.putData("resetRobot", new resetRobot());
//        SmartDashboard.putData("defaultClaw", new defaultClaw());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    public Joystick getdriveStick() {
        return driveStick;
    }

    public Joystick getelevatorStick() {
        return elevatorStick;
    }


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}

